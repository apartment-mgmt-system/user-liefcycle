apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: ${DOCKER_IMAGE}
          imagePullPolicy: Always
          env:
            - name: SPRING_DATA_REDIS_HOST
              value: "redis-service"
            - name: SPRING_DATA_REDIS_PORT
              value: "6379"
            - name: SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS
              value: "event-streaming-kraft:29092"
            - name: SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS
              value: "event-streaming-kraft:29092"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://mysql-service:3306/User_Management"
            - name: SPRING_DATASOURCE_USERNAME
              value: "root"
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-root-secret
                  key: mysql-root-password
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: jwt-secret-key
          ports:
            - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer # Exposes the service externally
